{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import _toConsumableArray from\"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{Row,Col,Image,ListGroup,Card,Button,Form}from\"react-bootstrap\";import Rating from\"../components/Rating\";import Loader from\"../components/Loader\";import Meta from\"../components/Meta\";import Message from\"../components/Message\";import{listProductDetails}from\"../actions/productActions\";//destructure match from 'props'\nvar ProductScreen=function ProductScreen(_ref){var history=_ref.history,match=_ref.match;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),qty=_useState2[0],setQty=_useState2[1];var dispatch=useDispatch();var productDetails=useSelector(function(state){return state.productDetails;});var loading=productDetails.loading,error=productDetails.error,product=productDetails.product;useEffect(function(){dispatch(listProductDetails(match.params.id));},[dispatch,match]);var addToCartHandler=function addToCartHandler(){history.push(\"/cart/\".concat(match.params.id,\"?qty=\").concat(qty));};return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{title:product.name}),/*#__PURE__*/_jsxs(Row,{className:\"py-5\",children:[/*#__PURE__*/_jsx(Col,{md:6,style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Image,{src:product.image,alt:product.name,fluid:true})})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"strong\",{children:product.brand}),/*#__PURE__*/_jsx(\"h3\",{className:\"my-2\",children:product.name})]}),/*#__PURE__*/_jsx(ListGroup.Item,{children:product.description}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Price\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",product.price]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Status\"}),/*#__PURE__*/_jsx(Col,{children:product.countInStock>0?\"In Stock\":\"Out Of Stock\"})]})}),product.countInStock>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Qty\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",value:qty,onChange:function onChange(e){return setQty(e.target.value);},children:_toConsumableArray(Array(product.countInStock).keys()).map(function(x){return/*#__PURE__*/_jsx(\"option\",{value:x+1,children:x+1},x+1);})})})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{className:\"py-4\",children:/*#__PURE__*/_jsx(Button,{onClick:addToCartHandler,className:\"btn-block\",type:\"button\",disabled:product.countInStock===0,children:\"Add to Cart\"})})]}):/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{onClick:addToCartHandler,className:\"btn-block py-3\",type:\"button\",disabled:product.countInStock===0,children:\"Out Of Stock\"})})]})})]})]})});};export default ProductScreen;","map":{"version":3,"sources":["/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","Rating","Loader","Meta","Message","listProductDetails","ProductScreen","history","match","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","addToCartHandler","push","name","display","justifyContent","alignItems","image","brand","description","price","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Meta from \"../components/Meta\";\nimport Message from \"../components/Message\";\nimport { listProductDetails } from \"../actions/productActions\";\n\n//destructure match from 'props'\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return (\n    <>\n      {/* <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link> */}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row className=\"py-5\">\n            <Col\n              md={6}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {/* fluid keeps image within container */}\n              <div>\n                <Image src={product.image} alt={product.name} fluid />\n              </div>\n            </Col>\n            <Col md={6}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <strong>{product.brand}</strong>\n                  <h3 className=\"my-2\">{product.name}</h3>\n                </ListGroup.Item>\n                {/* <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item> */}\n\n                <ListGroup.Item>{product.description}</ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status</Col>\n                    <Col>\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {/* if in stock, show qty row */}\n                {product.countInStock > 0 ? (\n                  <>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"py-4\">\n                      <Button\n                        onClick={addToCartHandler}\n                        className=\"btn-block\"\n                        type=\"button\"\n                        disabled={product.countInStock === 0}\n                      >\n                        Add to Cart\n                      </Button>\n                    </ListGroup.Item>\n                  </>\n                ) : (\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block py-3\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Out Of Stock\n                    </Button>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Col>\n            {/* <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {/* if in stock, show qty row \n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col> */}\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}