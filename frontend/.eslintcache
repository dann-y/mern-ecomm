[{"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/index.js":"1","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/store.js":"2","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/App.js":"3","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reportWebVitals.js":"4","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/productReducers.js":"5","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/userReducers.js":"6","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Header.js":"7","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Footer.js":"8","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/HomeScreen.js":"9","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductScreen.js":"10","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/CartScreen.js":"11","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/cartReducers.js":"12","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Product.js":"13","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Message.js":"14","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Loader.js":"15","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Rating.js":"16","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/userConstants.js":"17","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/productActions.js":"18","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/cartConstants.js":"19","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/productConstants.js":"20","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/cartActions.js":"21","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/LoginScreen.js":"22","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/FormContainer.js":"23","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/userActions.js":"24","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/RegisterScreen.js":"25","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProfileScreen.js":"26","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ShippingScreen.js":"27","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/CheckoutSteps.js":"28","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/PaymentScreen.js":"29","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/orderReducers.js":"31","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/orderConstants.js":"32","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/orderActions.js":"33","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/OrderScreen.js":"34","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/UserListScreen.js":"35","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/UserEditScreen.js":"36","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductListScreen.js":"37","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductEditScreen.js":"38","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/OrderListScreen.js":"39","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/SearchBox.js":"40","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Paginate.js":"41","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Meta.js":"42"},{"size":597,"mtime":1611549827000,"results":"43","hashOfConfig":"44"},{"size":2123,"mtime":1616539634503,"results":"45","hashOfConfig":"44"},{"size":2739,"mtime":1616622220847,"results":"46","hashOfConfig":"44"},{"size":362,"mtime":1611359525332,"results":"47","hashOfConfig":"44"},{"size":2637,"mtime":1616629949417,"results":"48","hashOfConfig":"44"},{"size":3468,"mtime":1616020096466,"results":"49","hashOfConfig":"44"},{"size":2855,"mtime":1616791890066,"results":"50","hashOfConfig":"44"},{"size":321,"mtime":1616722095287,"results":"51","hashOfConfig":"44"},{"size":1885,"mtime":1616722070035,"results":"52","hashOfConfig":"44"},{"size":6670,"mtime":1616722301402,"results":"53","hashOfConfig":"44"},{"size":4085,"mtime":1616792521187,"results":"54","hashOfConfig":"44"},{"size":1934,"mtime":1615504286157,"results":"55","hashOfConfig":"44"},{"size":1388,"mtime":1616718564336,"results":"56","hashOfConfig":"44"},{"size":259,"mtime":1611612091465,"results":"57","hashOfConfig":"44"},{"size":389,"mtime":1611615199912,"results":"58","hashOfConfig":"44"},{"size":1801,"mtime":1611368811618,"results":"59","hashOfConfig":"44"},{"size":1502,"mtime":1616019988406,"results":"60","hashOfConfig":"44"},{"size":3878,"mtime":1616618922173,"results":"61","hashOfConfig":"44"},{"size":238,"mtime":1615504172738,"results":"62","hashOfConfig":"44"},{"size":1048,"mtime":1616527289344,"results":"63","hashOfConfig":"44"},{"size":1329,"mtime":1615504241660,"results":"64","hashOfConfig":"44"},{"size":2373,"mtime":1616793272897,"results":"65","hashOfConfig":"44"},{"size":336,"mtime":1614994781730,"results":"66","hashOfConfig":"44"},{"size":6651,"mtime":1616037887245,"results":"67","hashOfConfig":"44"},{"size":3141,"mtime":1615411160904,"results":"68","hashOfConfig":"44"},{"size":5561,"mtime":1615869984566,"results":"69","hashOfConfig":"44"},{"size":2538,"mtime":1615502737505,"results":"70","hashOfConfig":"44"},{"size":1246,"mtime":1615502771871,"results":"71","hashOfConfig":"44"},{"size":1782,"mtime":1615522373945,"results":"72","hashOfConfig":"44"},{"size":5606,"mtime":1616793080675,"results":"73","hashOfConfig":"44"},{"size":2775,"mtime":1616539298402,"results":"74","hashOfConfig":"44"},{"size":964,"mtime":1616539244255,"results":"75","hashOfConfig":"44"},{"size":4488,"mtime":1616539503994,"results":"76","hashOfConfig":"44"},{"size":6298,"mtime":1616720625884,"results":"77","hashOfConfig":"44"},{"size":2695,"mtime":1616017503966,"results":"78","hashOfConfig":"44"},{"size":3154,"mtime":1616038395392,"results":"79","hashOfConfig":"44"},{"size":4034,"mtime":1616622271360,"results":"80","hashOfConfig":"44"},{"size":6139,"mtime":1616535419891,"results":"81","hashOfConfig":"44"},{"size":2503,"mtime":1616542057842,"results":"82","hashOfConfig":"44"},{"size":804,"mtime":1616709119170,"results":"83","hashOfConfig":"44"},{"size":804,"mtime":1616622243341,"results":"84","hashOfConfig":"44"},{"size":407,"mtime":1616796007447,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"oqq4jx",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/index.js",[],["176","177"],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/store.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/App.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reportWebVitals.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/productReducers.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/userReducers.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Header.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Footer.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/HomeScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductScreen.js",["178","179","180"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Meta from \"../components/Meta\";\nimport Message from \"../components/Message\";\nimport { listProductDetails } from \"../actions/productActions\";\n\n//destructure match from 'props'\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return (\n    <>\n      {/* <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link> */}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row className=\"py-5\">\n            <Col\n              md={6}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {/* fluid keeps image within container */}\n              <div>\n                <Image src={product.image} alt={product.name} fluid />\n              </div>\n            </Col>\n            <Col md={6}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <strong>{product.brand}</strong>\n                  <h3 className=\"my-2\">{product.name}</h3>\n                </ListGroup.Item>\n                {/* <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item> */}\n\n                <ListGroup.Item>{product.description}</ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status</Col>\n                    <Col>\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {/* if in stock, show qty row */}\n                {product.countInStock > 0 ? (\n                  <>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"py-4\">\n                      <Button\n                        onClick={addToCartHandler}\n                        className=\"btn-block\"\n                        type=\"button\"\n                        disabled={product.countInStock === 0}\n                      >\n                        Add to Cart\n                      </Button>\n                    </ListGroup.Item>\n                  </>\n                ) : (\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block py-3\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Out Of Stock\n                    </Button>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Col>\n            {/* <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {/* if in stock, show qty row \n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col> */}\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/CartScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/cartReducers.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Product.js",["181"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded \" border=\"light\">\n      <div\n        style={{\n          height: \"250px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Link to={`/product/${product._id}`}>\n          <Card.Img\n            src={product.image}\n            variant=\"top\"\n            style={{\n              maxHeight: \"250px\",\n              width: \"auto\",\n              maxWidth: \"100% \",\n            }}\n          />\n        </Link>\n      </div>\n\n      <Card.Body>\n        <Card.Text as=\"div\">\n          <div className=\"my-2\">{product.brand}</div>\n        </Card.Text>\n\n        <Link to={`product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        {product.countInStock > 0 ? (\n          <Card.Text as=\"h4\">${product.price}</Card.Text>\n        ) : (\n          <>\n            <Card.Text as=\"h4\">\n              {\" \"}\n              <s className=\"text-muted\">${product.price}</s>\n            </Card.Text>\n            <Card.Text>Sold Out</Card.Text>\n          </>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Message.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Loader.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Rating.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/userConstants.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/productActions.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/cartConstants.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/productConstants.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/cartActions.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/LoginScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/FormContainer.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/userActions.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/RegisterScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProfileScreen.js",["182"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order.id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>{\" \"}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ShippingScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/CheckoutSteps.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/PaymentScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/PlaceOrderScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/reducers/orderReducers.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/constants/orderConstants.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/actions/orderActions.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/OrderScreen.js",["183","184"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{\" \"}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n\n              <Message variant=\"danger\">Not Delivered</Message>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/UserListScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/UserEditScreen.js",["185"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, userId, user, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, history, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductListScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/ProductEditScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/screens/OrderListScreen.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/SearchBox.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Paginate.js",[],"/Users/danielchu/Desktop/Web-Dev/mern-ecomm/frontend/src/components/Meta.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":9,"column":3,"nodeType":"192","messageId":"193","endLine":9,"endColumn":7},{"ruleId":"190","severity":1,"message":"195","line":13,"column":8,"nodeType":"192","messageId":"193","endLine":13,"endColumn":14},{"ruleId":"190","severity":1,"message":"195","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"196","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":21},{"ruleId":"190","severity":1,"message":"197","line":5,"column":44,"nodeType":"192","messageId":"193","endLine":5,"endColumn":50},{"ruleId":"198","severity":1,"message":"199","line":66,"column":6,"nodeType":"200","endLine":66,"endColumn":44,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"202","line":43,"column":6,"nodeType":"200","endLine":43,"endColumn":45,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Rating' is defined but never used.","'FormContainer' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo, history]",{"range":"212","text":"213"},"Update the dependencies array to be: [dispatch, userId, user, successUpdate, history]",{"range":"214","text":"215"},[2095,2133],"[dispatch, orderId, successPay, order, userInfo, history]",[1370,1409],"[dispatch, userId, user, successUpdate, history]"]